{"version":3,"sources":["logo.svg","reducers/workOrderReducer.js","constants/ActionTypes.js","reducers/index.js","api.js","actions/workOrderActions/index.js","components/login.component.js","components/signup.component.js","components/azure-storage-blob.js","components/Scanner.component.js","components/Barcode.component.js","components/Home.component.js","components/Results.component.js","components/sidebar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","apiErrorCode","workOrderData","errorData","step1Data","step1ProblemData","step2Data","step2ImageData","step3Data","step3ImageData","imageUploadedData","removeImageData","currentUploadStatus","workOrderItems","workOrderDetails","workOrderHistoryDetails","fixedWorkOrderDetails","assetCategoriesList","assetSubCategoriesList","assetLocationsList","notificationData","workOrderScriptData","questionnaireData","workOrderReasons","promptCheckFlag","pageFilterType","currentPageFlag","currentDuplicatePageFlag","reviewPageFilterType","currentReviewPageFlag","storeUserAccessFlag","storeWithoutAssetData","searchAssetData","problemDescriptionData","getWorkOrderType","getScrollYPositionValue","show","id","assetListPageFlag","storeSearchAssetData","storeCheckAssetData","storeAssetListPage","step2ImageBase64","step3ImageBase64","getHelpDeskData","blobList","workOrderReducer","state","action","type","payload","rootReducer","combineReducers","headers","localStorage","getItem","getNotification","dispatch","a","axios","get","api","response","data","storeScrollYPosition","Login","props","focusImageInput","faultImageInput","current","click","handleChangeStep2Image","target","checkMimeType","files","getImagePreviewUrl","value","err","types","x","length","every","alert","console","log","showAlert","setState","isOpen","showOCR","Id","obj","locationErrorTag","imgErr","banner","notificationOpen1","notificationOpen2","notItems","selectedId","inputFile","successMsg","ocrComponent","listItems","React","createRef","this","updateUser","prevProps","equal","then","temp","arr","list","map","item","push","file","reader","FileReader","onloadend","result","readAsDataURL","e","imagePreviewUrl","className","onClick","xmlns","width","height","fill","class","viewBox","d","role","refId","data-dismiss","aria-label","aria-hidden","Component","connect","assetData","cameraScanReducer","getAssetData","userData","userActionReducer","Homepage","toast","step2ImageItem","filter","undefined","storeStep2Images","placeholder","style","display","onChange","accept","ref","key","src","alt","handleSubmit","sasToken","process","storagesastoken","storageAccountName","storageresourcename","getBlobsInContainer","containerClient","returnedBlobUrls","listBlobsFlat","blob","name","createBlobInContainer","blobClient","getBlockBlobClient","options","blobHTTPHeaders","blobContentType","uploadBrowserData","uploadFileToBlob","blobService","BlobServiceClient","getContainerClient","createIfNotExists","access","uploadFileToBlob2","Scanner","onDetected","Quagga","stop","_onDetected","init","inputStream","numberOfWorkers","navigator","hardwareConcurrency","document","querySelector","constraints","facingMode","locator","patchSize","halfSample","numOfWorkers","decoder","readers","locate","multiple","debug","showCanvas","showPatches","showFoundPatches","showSkeleton","showLabels","showPatchLabels","showRemainingPatchLabels","boxFromPatches","showTransformed","showTransformedBox","showBB","start","Barcode","_scan","scanning","isDetected","concat","fileData1","fileData2","configure","Home","onFileChange1","event","file1","transId","fileName1","split","pop","File","fileSelected","onFileChange2","event2","file2","fileName2","fileSelected2","focusImageInput1","focusImageInput2","faultImageInput2","handleChangeStep2Image1","getImagePreviewUrl1","handleChangeStep2Image2","getImagePreviewUrl2","handleClose","inputFile2","next","handleCancel","handleNext","confirmAlert","message","buttons","label","handleBack","handleScan","handleError","error","delete","blobsInContainer2","handleremoveImage1","handleremoveImage2","notify","position","POSITION","TOP_CENTER","actualFile","actualFile2","bind","reader2","cancelForm","to","activeClassName","logo","textAlign","disabled","Results","blobToString","fileReader","Promise","resolve","reject","ev","onerror","readAsText","blobServiceClient2","containerClient2","returnedBlobs","i","getBlobClient","download","downloadBlockBlobResponse","blobBody","downloaded","JSON","parse","marginLeft","marginRight","marginTop","transaction_id","image_id","supplier_code","transaction_date_time","href","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunkMiddleware","App","useState","pageWrapId","outerContainerId","exact","path","component","Signup","Boolean","location","hostname","match","positions","BOTTOM_CENTER","timeout","offset","transition","transitions","SCALE","ReactDOM","render","template","AlertTemplate","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b7fd6b3c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.49c078ba.svg\";","import * as types from '../constants/ActionTypes';\nlet initialState = {\n  apiErrorCode: '',\n  workOrderData: '',\n  errorData: '',\n  step1Data: '',\n  step1ProblemData: '',\n  step2Data: '',\n  step2ImageData: [],\n  step3Data: '',\n  step3ImageData: [],\n  imageUploadedData: '',\n  removeImageData: '',\n  currentUploadStatus: false,\n  workOrderItems: [],\n  workOrderDetails: [],\n  workOrderHistoryDetails: [],\n  fixedWorkOrderDetails: [],\n  assetCategoriesList: '',\n  assetSubCategoriesList: '',\n  assetLocationsList: '',\n  notificationData: '',\n  workOrderScriptData: '',\n  questionnaireData: '',\n  workOrderReasons: [],\n  promptCheckFlag: false,\n  pageFilterType: 'Open',\n  currentPageFlag: 1,\n  currentDuplicatePageFlag: '',\n  reviewPageFilterType: 'ReviewFix',\n  currentReviewPageFlag: 1,\n  storeUserAccessFlag: '',\n  storeWithoutAssetData: {},\n  searchAssetData: [],\n  problemDescriptionData: '',\n  getWorkOrderType: '',\n  getScrollYPositionValue: { show: false, id: ''},\n  assetListPageFlag: false,\n  storeSearchAssetData: {},\n  storeCheckAssetData: '',\n  storeAssetListPage: 1,\n  step2ImageBase64: [],\n  step3ImageBase64: [],\n  getHelpDeskData: {},\n  blobList:[],\n}\n\nconst workOrderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.STORE_NOTIFICATION_REDUCER:\n      return {\n        ...state,\n        workOrderData: action.payload\n      } \n      case types.STORE_SCROLLY_POSITION:\n      return {\n        ...state,\n        getScrollYPositionValue: action.payload\n      } \n    case \"ERROR\":\n      return {\n        ...state,\n        errorData: action.payload\n      }\n    default:\n      return state;\n  }\n}\n\n\n\nexport default workOrderReducer;\n","export const STORE_NOTIFICATION_REDUCER = 'STORE_NOTIFICATION_REDUCER'\r\nexport const STORE_SCROLLY_POSITION = 'STORE_SCROLLY_POSITION'","import { combineReducers } from 'redux'\nimport workOrderReducer from './workOrderReducer'\n\n\nconst rootReducer = combineReducers({\n  workOrderReducer\n})\n\nexport default rootReducer\n","export default {\r\n    api : 'https://ocrdemoapi2.azurewebsites.net/api/values'\r\n}","import axios from 'axios'\nimport * as types from '../../constants/ActionTypes'\nimport api from '../../api'\n\n\nconst id_token = localStorage.getItem('id_token')\n\nconst headers = {\n  'Content-Type': 'application/json',\n  //Authorization: id_token,\n}\n\n\n\nexport const getNotification = () => async dispatch => {\n  const response = await axios.get(`${api.api}`, {headers})\n  try{\n    return dispatch ({\n      type: types.STORE_NOTIFICATION_REDUCER,\n    payload: response.data,\n    })\n  }\n  catch(error){\n    return dispatch ({\n      type: 'ERROR',\n    payload: response,\n    })\n  }\n}\n\nexport const storeScrollYPosition = payload => ({\n  type: types.STORE_SCROLLY_POSITION,\n  payload\n})\n\n\n","import React, { Component } from \"react\";\nimport equal from 'fast-deep-equal'\nimport {Link} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport {getNotification, storeScrollYPosition} from '../actions/workOrderActions'\n  \n\n\nclass Login extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n          locationErrorTag: false,\n          imgErr: false,\n          show: false,\n          banner: false,\n          notificationOpen1: true,\n          notificationOpen2: true,\n          notItems: [],\n          selectedId: '',\n          inputFile: [],\n          successMsg: false,\n          isOpen: false,\n          ocrComponent: false,\n          listItems:[]\n        }\n        //this.handleSubmit = this.handleSubmit.bind(this)\n        //this.cancelForm = this.cancelForm.bind(this)\n        //this.handleChangeStep2Image = this.handleChangeStep2Image.bind(this)\n        //this.textInput = React.createRef()\n        this.faultImageInput = React.createRef()\n        //this.focusTextInput = this.focusTextInput.bind(this)\n        //this.focusImageInput = this.focusImageInput.bind(this)\n        // this.removeImage = this.removeImage.bind(this)\n        // this.backToDashboard = this.backToDashboard.bind(this)\n    }\n\n    componentDidMount()\n    {\n     this.updateUser();\n    }\n\n    componentDidUpdate(prevProps){\n      if(!equal(this.props.workOrderData, prevProps.workOrderData)){\n        this.updateUser();\n      }\n    }\n\n    updateUser(){\n      this.props.getNotification().then(data=>{\n        console.log(\"1234567dhjfghgjhdjfghjdfhgjkdk\", data.data)\n        const temp = data && data.payload ?  data.payload : [];\n        this.setState({\n          listItems: temp,\n        })\n      })\n    }\n    \n\n\n    backToDashboard(data){\n        let arr = []\n        var list = this.state.notItems\n        if (list && list.length > 0) {\n          list.map(item => {\n              item.show = false\n            arr.push(item)\n          })\n          this.setState({\n            notItems: arr,\n            selectedId: data\n          })\n        }\n        this.setState({\n          banner: true,\n          show: false,\n          notificationOpen1: false,\n          notificationOpen2: false\n        })\n      }\n    \n\n      focusImageInput = () => {\n            this.faultImageInput.current.click()\n          }\n    \n        handleChangeStep2Image = ({target}) => {\n          if (target && target.type === \"file\") {\n            if (this.checkMimeType(target)) {\n              if (target.files[0]) {\n                this.getImagePreviewUrl(target.files[0])\n                //this.setImageStep2(target.files[0])\n              }\n            }\n            target.value = ''\n          }\n        }\n    \n        getImagePreviewUrl(file) {\n              let reader = new FileReader()\n              reader.onloadend = () => {\n                this.setState({\n                    inputFile: reader.result\n                })\n              }\n              reader.readAsDataURL(file)\n            }\n    \n           checkMimeType = (target) => {\n              //getting file object\n              let files = target.files\n              //define message container\n              let err = ''\n              // list allow mime type\n              const types = ['image/jpg', 'image/jpeg']\n              // loop access array\n              for (var x = 0; x < files.length; x++) {\n                // compare file type find doesn't matach\n                if (types.every(type => files[x].type !== type)) {\n                  // create error message and assign to container\n                  err +=\n                    files[x].type +\n                    ' is not a supported format. Only .jpg and .jpeg is allowed'\n                }\n              }\n            \n              if (err !== '') {\n                // if message not same old that mean has error\n                target.value = null // discard selected file\n                alert(err)\n                console.log(err)\n                return false\n              }\n              return true\n            }\n\n\n\n      handleSubmit() {\n          if(this.state.inputFile.length >1){\n            this.setState({\n                show : true,\n                inputFile: [],\n                successMsg : true\n              })\n          }\n      }\n\n      removeImage() {\n        this.setState({\n            inputFile: ''\n          })\n      }\n\n      handleBack(){\n        this.setState({\n            successMsg: false\n        })\n    }\n\n    handleImageChange(e) {\n      console.log(\"11\",e)\n     // e.preventDefault();\n  \n      let reader = new FileReader();\n      let file = e.target.files[0];\n  \n      reader.onloadend = () => {\n        this.setState({\n          file: file,\n          imagePreviewUrl: reader.result\n        });\n      }\n  \n      reader.readAsDataURL(file)\n    }\n\n    showAlert = ()=>{\n      this.setState({ isOpen: true })\n    }\n\n    showOCR = (Id)=>{\n      debugger;\n       var obj = {\n         show: true,\n         id: Id\n       }\n     this.props.storeScrollYPosition(obj)\n    \n    }\n    \n\n    render() {\n      const {getScrollYPositionValue} = this.props\n        const {successMsg, listItems, selectedId} = this.state\n        console.log(\"state\",this.state)\n        return (\n          <div>\n          \n                {/* <h3>OCR Trigger</h3> */}\n\n                <div className=\"container float\" onClick={() =>\n                  this.showAlert()\n                }>\n                  <div className=\"division\">\n           <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-bell-fill\" viewBox=\"0 0 16 16\">\n            <path d=\"M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2zm.995-14.901a1 1 0 1 0-1.99 0A5.002 5.002 0 0 0 3 6c0 1.098-.5 6-2 7h14c-1.5-1-2-5.902-2-7 0-2.42-1.72-4.44-4.005-4.901z\"/>\n            </svg>\n            <sup>{listItems && listItems.length > 0 ? listItems.length : ''}</sup>\n            </div>\n           </div> \n     \n      \n       <div className=\"auth-wrapper\">\n        {this.state.isOpen && getScrollYPositionValue && getScrollYPositionValue.show == false ? \n     <div className=\"parent-div\">\n       {listItems && listItems.length > 0 ?\n            listItems\n              .map(item => (\n     <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\" onClick={()=>this.showOCR(item.refId)}>\n     Attend the <strong>{`Transaction Id: ${item.refId}`}</strong> \n  <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div> \n              )) : ''}\n     </div> : '' }\n     </div>\n                \n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n  return {\n    assetData: state.cameraScanReducer && state.cameraScanReducer.getAssetData,\n    step2Data: state.workOrderReducer && state.workOrderReducer.step2Data,\n    step2ImageData: state.workOrderReducer && state.workOrderReducer.step2ImageData,\n    storeWithoutAssetData: state.workOrderReducer && state.workOrderReducer.storeWithoutAssetData,\n    getWorkOrderType: state.workOrderReducer && state.workOrderReducer.getWorkOrderType,\n    step2ImageBase64: state.workOrderReducer && state.workOrderReducer.step2ImageBase64,\n    step3ImageBase64: state.workOrderReducer && state.workOrderReducer.step3ImageBase64,\n    workOrderScriptData: state.workOrderReducer && state.workOrderReducer.workOrderScriptData,\n    userData: state.userActionReducer && state.userActionReducer.userData,\n    step3ImageData: state.workOrderReducer && state.workOrderReducer.step3ImageData,\n    getScrollYPositionValue:\n    state.workOrderReducer && state.workOrderReducer.getScrollYPositionValue,\n    workOrderData: state.workOrderReducer && state.workOrderReducer.workOrderData,\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    getNotification:()=> dispatch(getNotification()),\n    storeScrollYPosition: payload=> dispatch(storeScrollYPosition(payload)),\n    }\n  }\n\nLogin = connect(mapStateToProps, mapDispatchToProps)(Login)\n    \nexport default Login\n","import React from 'react'\nimport { ToastContainer, toast } from 'react-toastify';\nimport {Link} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport {getNotification} from '../actions/workOrderActions'\nimport equal from 'fast-deep-equal'\nimport { storeScrollYPosition} from '../actions/workOrderActions'\n\n\n\n\n\nclass Homepage extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      show: false,\n      inputFile: []\n    };\n    this.faultImageInput = React.createRef()\n  }\n\n  componentDidUpdate(prevProps) {\n\n    debugger\n    if(this.props.getScrollYPositionValue && prevProps.getScrollYPositionValue) // Check if it's a new user, you can also use some unique property, like the ID  (this.props.user.id !== prevProps.user.id)\n    {\n    //   if(!equal(this.props.getScrollYPositionValue.length, prevProps.getScrollYPositionValue.length)){\n    //     this.updateUser();\n    //   }\n\n    //this.props.storeScrollYPosition(true)\n      \n    }\n  } \n\n\n     notify  (){toast(\"Wow so easy !\");} \n\n    backToDashboard(data){\n        let arr = []\n        var list = this.state.notItems\n        if (list && list.length > 0) {\n          list.map(item => {\n              item.show = false\n            arr.push(item)\n          })\n          this.setState({\n            notItems: arr,\n            selectedId: data\n          })\n        }\n        this.setState({\n          banner: true,\n          show: false,\n          notificationOpen1: false,\n          notificationOpen2: false\n        })\n      }\n    \n\n\n\n  focusImageInput = () => {\n        this.faultImageInput.current.click()\n      }\n\n    setImageStep2(file) {\n      if (file) {\n        const step2ImageItem = [...this.props.step2ImageData,file].filter(item => item !== undefined && item !== \"\")\n        this.props.storeStep2Images(step2ImageItem)\n      }\n    }\n\n    handleChangeStep2Image = ({target}) => {\n      if (target && target.type === \"file\") {\n        if (this.checkMimeType(target)) {\n          if (target.files[0]) {\n            this.getImagePreviewUrl(target.files[0])\n            //this.setImageStep2(target.files[0])\n          }\n        }\n        target.value = ''\n      }\n    }\n\n    getImagePreviewUrl(file) {\n          let reader = new FileReader()\n          reader.onloadend = () => {\n            this.setState({\n                inputFile: reader.result\n            })\n          }\n          reader.readAsDataURL(file)\n        }\n\n       checkMimeType = (target) => {\n          //getting file object\n          let files = target.files\n          //define message container\n          let err = ''\n          // list allow mime type\n          const types = ['image/jpg', 'image/jpeg']\n          // loop access array\n          for (var x = 0; x < files.length; x++) {\n            // compare file type find doesn't matach\n            if (types.every(type => files[x].type !== type)) {\n              // create error message and assign to container\n              err +=\n                files[x].type +\n                ' is not a supported format. Only .jpg and .jpeg is allowed'\n            }\n          }\n        \n          if (err !== '') {\n            // if message not same old that mean has error\n            target.value = null // discard selected file\n            alert(err)\n            console.log(err)\n            return false\n          }\n          return true\n        }\n\n        handleSubmit() {\n            if(this.state.inputFile.length >1){\n              this.setState({\n                  show : true,\n                  inputFile: [],\n                  successMsg : true\n                })\n            }\n        }\n  \n  render() {\n    console.log(\"this.state.show\",this.state.inputFile.length)\n    const {getScrollYPositionValue} = this.props\n    console.log(\"getScrollYPositionValue\",this.props)\n    //const ImageArray = this.props && this.props.step2ImageBase64 && this.props.step2ImageBase64.length > 0 ? this.props.step2ImageBase64.filter(data => data !== undefined) : []\n    return (\n\n      \n  getScrollYPositionValue ?\n     <div>\n       <div className=\"auth-wrapper\">\n        <div className=\"auth-inner\">\n         <h3>OCR Trigger</h3>\n                {/* {!successMsg ? */}\n                <div>\n                  <div className=\"form-group\">\n                    <label>Transaction Number</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Transaction Number\" />\n                  </div>\n                  <div className=\"form-group\">\n                    {this.state.inputFile && this.state.inputFile.length == 0 ? \n                    <button className=\"btn btn-primary btn-block\" onClick={this.focusImageInput}>Capture Photo  </button>\n                    : ''}\n                  \n                    <input type=\"file\"  id=\"step3Image\"   style={{ display: 'none' }} onChange={this.handleChangeStep2Image}  accept=\".jpg, .jpeg\"  ref={this.faultImageInput} />\n\n                    {this.state.inputFile && this.state.inputFile.length > 0 ? \n                      <div><img key={1} src={this.state.inputFile} id='imgtag' alt={`Image of fault ${1 + 1}   `} role=\"presentation\" />\n                      </div>\n                    : ''}\n                  </div>\n                  <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={this.handleSubmit}>Submit</button>\n                </div>\n          </div>\n        </div>\n      </div>\n      : ''    \n    \n      )\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n      assetData: state.cameraScanReducer && state.cameraScanReducer.getAssetData,\n      step2Data: state.workOrderReducer && state.workOrderReducer.step2Data,\n      step2ImageData: state.workOrderReducer && state.workOrderReducer.step2ImageData,\n      storeWithoutAssetData: state.workOrderReducer && state.workOrderReducer.storeWithoutAssetData,\n      getWorkOrderType: state.workOrderReducer && state.workOrderReducer.getWorkOrderType,\n      step2ImageBase64: state.workOrderReducer && state.workOrderReducer.step2ImageBase64,\n      step3ImageBase64: state.workOrderReducer && state.workOrderReducer.step3ImageBase64,\n      workOrderScriptData: state.workOrderReducer && state.workOrderReducer.workOrderScriptData,\n      userData: state.userActionReducer && state.userActionReducer.userData,\n      step3ImageData: state.workOrderReducer && state.workOrderReducer.step3ImageData,\n      getScrollYPositionValue:\n      state.workOrderReducer && state.workOrderReducer.getScrollYPositionValue,\n    }\n  }\n\nconst mapDispatchToProps = dispatch => {\n      return {\n      getNotification:()=> dispatch(getNotification()),\n      storeScrollYPosition:() => dispatch(storeScrollYPosition())\n      }\n    }\n  \n    Homepage = connect(mapStateToProps, mapDispatchToProps)(Homepage)\n\nexport default Homepage\n","import { BlobServiceClient, ContainerClient} from '@azure/storage-blob';\n\nconst sasToken = process.env.storagesastoken || '?sv=2019-12-12&ss=bfqt&srt=sco&sp=rwdlacupx&se=2021-03-31T15:22:13Z&st=2021-01-01T07:22:13Z&spr=https&sig=FVhtgV8zmhwD6I%2BCUDURS3ghXmP8Q%2FY%2FaP%2BXoW0ShrU%3D'; // SAS token\nconst containerName = `ocrappinputimage01`;\nconst storageAccountName = process.env.storageresourcename || \"ocrfilesharestorageact01\"; //Storage resource name\n\nexport const isStorageConfigured = () => {\n  return (!storageAccountName || !sasToken) ? false : true;\n}\n\nconst getBlobsInContainer = async (containerClient) => {\n  const returnedBlobUrls = [];\n\n  for await (const blob of containerClient.listBlobsFlat()) {\n    // if image is public, just construct URL\n    returnedBlobUrls.push(\n      `https://${storageAccountName}.blob.core.windows.net/${containerName}/${blob.name}`\n    );\n  }\n\n  return returnedBlobUrls;\n}\n\nconst createBlobInContainer = async (containerClient, file) => {\n  const blobClient = containerClient.getBlockBlobClient(file.name);\n  const options = { blobHTTPHeaders: { blobContentType: file.type } };\n  await blobClient.uploadBrowserData(file, options);\n}\n\nconst uploadFileToBlob = async (file) => {\n  if (!file) return [];\n\n  const blobService = new BlobServiceClient(\n    `https://${storageAccountName}.blob.core.windows.net/?${sasToken}`\n  );\n\n  const containerClient = blobService.getContainerClient(containerName);\n  await containerClient.createIfNotExists({\n    access: 'container',\n  });\n\n  await createBlobInContainer(containerClient, file);\n\n  return getBlobsInContainer(containerClient);\n};\n\nexport const uploadFileToBlob2 = async (file) => {\n  if (!file) return [];\n\n  const blobService = new BlobServiceClient(\n    `https://${storageAccountName}.blob.core.windows.net/?${sasToken}`\n  );\n\n  const containerClient = blobService.getContainerClient(`ocrreasonimage`);\n  await containerClient.createIfNotExists({\n    access: 'container',\n  });\n\n  await createBlobInContainer(containerClient, file);\n\n  return getBlobsInContainer(containerClient);\n};\n\n\nexport default uploadFileToBlob;\n\n","import React from 'react';\r\nimport Quagga from 'quagga'; // ES6\r\n\r\n\r\nclass Scanner extends React.Component {\r\n\r\n    componentDidMount(){\r\n      Quagga.init(\r\n        {\r\n          inputStream: {\r\n            name : \"Live\",\r\n            type: 'LiveStream',\r\n            numberOfWorkers: navigator.hardwareConcurrency,\r\n            target: document.querySelector('#Barcode'),\r\n            constraints: {\r\n              width: 1280,\r\n              height: 720,\r\n              facingMode: 'environment', // or user \r\n            },\r\n          },\r\n          locator: {\r\n            patchSize: 'large',\r\n            halfSample: true,\r\n          },\r\n          numOfWorkers: 4,\r\n          decoder: {\r\n            readers: ['code_39_reader'],\r\n          },\r\n          locate: true,\r\n          multiple: false,\r\n          locator: {\r\n            halfSample: true,\r\n            patchSize: 'large', // x-small, small, medium, large, x-large\r\n            debug: {\r\n              showCanvas: false,\r\n              showPatches: false,\r\n              showFoundPatches: false,\r\n              showSkeleton: false,\r\n              showLabels: false,\r\n              showPatchLabels: false,\r\n              showRemainingPatchLabels: false,\r\n              boxFromPatches: {\r\n                showTransformed: false,\r\n                showTransformedBox: false,\r\n                showBB: false,\r\n              },\r\n            },\r\n          },\r\n        },\r\n        function (err) {\r\n          if (err) {\r\n            return console.log(err)\r\n          }\r\n          Quagga.start()\r\n        },\r\n      )\r\n      Quagga.onDetected(this._onDetected)\r\n    }\r\n    \r\n\r\n    onDetected=(result)=>{\r\n        Quagga.stop()\r\n        this.props._onDetected(result)\r\n    }\r\n\r\n    render(){\r\n    return (\r\n        <div>hello world</div>\r\n\r\n\r\n    )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Scanner","import React from 'react';\r\nimport Quagga from 'quagga'; // ES6\r\nimport Scanner from './Scanner.component';\r\n\r\n\r\nclass Barcode extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            scanning:true,\r\n            result:[],\r\n            isDetected: false\r\n        }    \r\n    }\r\n\r\n    _scan=()=>{\r\n        this.setState({scanning: !this.state.scanning,\r\n       })          \r\n\r\n    }\r\n\r\n    _onDetected = (result) =>{\r\n        this.setState({scanning: !this.state.scanning,\r\n            isDetected : true,\r\n            result: this.state.result.concat([result])\r\n        }) \r\n        \r\n    }\r\n\r\n\r\n    render(){\r\n    \r\n    const {scanning} = this.state\r\n\r\n    return (\r\n        <div>\r\n            { scanning ? (<Scanner _onDetected={this._onDetected} /> ): ''}            \r\n        </div>\r\n    )\r\n    }\r\n\r\n}\r\n\r\nexport default Barcode","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport logo from '../../src/logo.svg'\nimport { NavLink, Link } from 'react-router-dom'\nimport axios from \"axios\";\nimport Path from 'path';\nimport { useAlert } from 'react-alert';\n\nimport { getNotification, storeScrollYPosition } from '../actions/workOrderActions'\nimport uploadFileToBlob,{ uploadFileToBlob2, getBlobsInContainer} from './azure-storage-blob.js';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport Barcode from './Barcode.component';\n\n\n// let fileData = '';\nlet fileData1 = '';\nlet fileData2 = '';\ntoast.configure();\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      show: false,\n      inputFile: [],\n      inputFile2: [],\n      listItems: [],\n      actualFile: '',\n      actualFile2: '',\n      blobList: [],\n      next: false,\n      fileSelected: null,\n      fileSelected2: null,\n      result: 'No result'\n    };\n    this.faultImageInput = React.createRef();\n    this.faultImageInput2 = React.createRef();\n    this.handleScan = this.handleScan.bind(this)\n  }\n\n  componentDidMount() {\n    //this.getBlobsInContainer();\n    this.updateUser();\n  }\n\n  updateUser() {\n    this.props.getNotification().then(data => {\n      console.log(\"1234567\", data)\n      const temp = data && data.payload ? data.payload : []\n      this.setState({\n        listItems: temp,\n      })\n    })\n  }\n\n  notify() { toast(\"Wow so easy !\"); }\n\n  backToDashboard(data) {\n    let arr = []\n    var list = this.state.notItems\n    if (list && list.length > 0) {\n      list.map(item => {\n        item.show = false\n        arr.push(item)\n      })\n      this.setState({\n        notItems: arr,\n        selectedId: data\n      })\n    }\n    this.setState({\n      banner: true,\n      show: false,\n      notificationOpen1: false,\n      notificationOpen2: false\n    })\n  }\n\n\n  // onFileChange = (event) => {\n  //   // capture file into state\n  //   this.setState({fileSelected: event});   \n  // };\n\n  // onFileChange = (event) => {\n  //   let file = event\n  //   const transId = this.props.getScrollYPositionValue ? this.props.getScrollYPositionValue.id : ''\n  //   let fileName = `#${transId}_OCR.${event.name.split('.').pop()}`\n  //   file = new File([file], fileName, { type: file.type });\n  //   console.log(\"file\", file)\n  //   fileData = file;\n  //   this.setState({ fileSelected: file });\n  //   debugger;\n  // };\n\n   onFileChange1 = (event) => {\n    let file1 = event\n    const transId = this.props.getScrollYPositionValue ? this.props.getScrollYPositionValue.id : ''\n    let fileName1 = `${transId}_Reason.${event.name.split('.').pop()}`\n    file1 = new File([file1], fileName1, { type: file1.type });\n    console.log(\"file\", file1)\n    fileData1 = file1;\n    this.setState({ fileSelected: file1 });\n    debugger;\n  };\n\n   onFileChange2 = (event2) => {\n     console.log(\"file2 selec\")\n    let file2 = event2\n    const transId = this.props.getScrollYPositionValue ? this.props.getScrollYPositionValue.id : ''\n    let fileName2 = `${transId}_OCR_image.${event2.name.split('.').pop()}`\n    file2 = new File([file2], fileName2, { type: file2.type });\n    console.log(\"file\", file2)\n    fileData2 = file2;\n    this.setState({ fileSelected2: file2 });\n    debugger;\n  };\n\n\n  focusImageInput1 = () => {\n    this.faultImageInput.current.click()\n  }\n\n  focusImageInput2 = () => {\n    this.faultImageInput2.current.click()\n  }\n\n  setImageStep2(file) {\n    if (file) {\n      const step2ImageItem = [...this.props.step2ImageData, file].filter(item => item !== undefined && item !== \"\")\n      this.props.storeStep2Images(step2ImageItem)\n    }\n  }\n\n  // handleChangeStep2Image = ({ target }) => {\n  //   if (target && target.type === \"file\") {\n  //     if (this.checkMimeType(target)) {\n  //       if (target.files[0]) {\n  //         this.getImagePreviewUrl(target.files[0])\n  //         //this.setImageStep2(target.files[0])\n  //         this.onFileChange(target.files[0])\n  //       }\n  //     }\n  //     target.value = ''\n  //   }\n  // }\n\n    handleChangeStep2Image1 = ({ target }) => {\n        if (target && target.type === \"file\") {\n          if (this.checkMimeType(target)) {\n            if (target.files[0]) {\n              this.getImagePreviewUrl1(target.files[0])\n              //this.setImageStep2(target.files[0])\n              this.onFileChange1(target.files[0])\n            }\n          }\n          target.value = ''\n        }\n      }\n    \n    handleChangeStep2Image2 = ({ target }) => {\n        if (target && target.type === \"file\") {\n          if (this.checkMimeType(target)) {\n            if (target.files[0]) {\n              this.getImagePreviewUrl2(target.files[0])\n              //this.setImageStep2(target.files[0])\n              this.onFileChange2(target.files[0])\n            }\n          }\n          target.value = ''\n        }\n      }\n\n  getImagePreviewUrl1(file1) {\n    let reader = new FileReader()\n    reader.onloadend = () => {\n      this.setState({\n        inputFile: reader.result,\n        actualFile: file1\n      })\n    }\n    reader.readAsDataURL(file1)\n  }\n\n  getImagePreviewUrl2(file2) {\n    let reader2 = new FileReader()\n    reader2.onloadend = () => {\n      this.setState({\n        inputFile2: reader2.result,\n        actualFile2: file2\n      })\n    }\n    reader2.readAsDataURL(file2)\n  }\n\n  checkMimeType = (target) => {\n    //getting file object\n    let files = target.files\n    //define message container\n    let err = ''\n    // list allow mime type\n    const types = ['image/jpg', 'image/jpeg', 'image/png']\n    // loop access array\n    for (var x = 0; x < files.length; x++) {\n      // compare file type find doesn't matach\n      if (types.every(type => files[x].type !== type)) {\n        // create error message and assign to container\n        err +=\n          files[x].type +\n          ' is not a supported format. Only .jpg, .jpeg, and .png is allowed'\n      }\n    }\n\n    if (err !== '') {\n      // if message not same old that mean has error\n      target.value = null // discard selected file\n      alert(err)\n      console.log(err)\n      return false\n    }\n    return true\n  }\n\n  handleClose = () => {\n    fileData1 = ''\n    fileData2 = ''\n    var obj = {\n      show: false,\n      id: ''\n    }\n    this.setState({\n      inputFile: [],\n      inputFile2: [],\n      next: false\n    })\n    \n    this.props.storeScrollYPosition(obj)\n  }\n\n  handleCancel = () => {\n    // fileData = ''\n    fileData1 = ''\n    fileData2 = ''\n    var obj = {\n      show: false,\n      id: ''\n    }\n    this.setState({\n      successMsg: false,\n      next: false,\n      inputFile: [],\n      inputFile2: []\n    })\n    this.props.storeScrollYPosition(obj)\n    this.updateUser();\n  }\n\n\n\n  handleNext = () => {  \n    if (this.state.inputFile !== undefined && this.state.inputFile.length ==0){ \n      confirmAlert({\n        // title: \"Don't Have A Reason\",\n        message: 'Are you sure you want to skip?',        \n        buttons: [\n          {\n            label: 'Yes',\n            onClick: () => this.setState({next:true})\n          },\n          {\n            label: 'No ',\n            \n          }\n        ]\n      });\n    }\n    else{\n      this.setState({next:true})\n    }    \n  }\n\n  \n  handleBack =()=>{\n    this.setState({\n        next: false,\n      })\n  }\n\n  handleScan=(data)=>{\n    this.setState({\n      result: data,\n    })\n  }\n  handleError=(err)=>{\n    console.error(err)\n  }\n\n  handleSubmit = async () => {\n    const temp = this.props.getScrollYPositionValue;\n    const value = temp.id;\n    if (this.state.inputFile2 !== undefined && this.state.inputFile2.length > 1) {\n\n      // delete notification.\n\n      const api = `https://ocrdemoapi2.azurewebsites.net/api/values?RefId=${value}`\n\n      const headers = {\n        'content-Type': 'application/json'\n      }\n\n      const data = axios.delete(\n        `${api}`,\n        { headers }).then(response => {\n          console.log(\"data\", response)\n          this.props.getNotification().then(data => {\n          })\n        })\n      // const onFileUpload = async () => {\n\n      //const [blobList, setBlobList] = useState([]);\n      // *** UPLOAD TO AZURE STORAGE ***\n      //const blobsInContainer: string[] = await uploadFileToBlob(fileSelected);\n      console.log('aaaaaaaaaaaaf', fileData1);\n      console.log('aaaaaaaaaaaaf', fileData2);\n\n      \n      if(this.state.inputFile && this.state.inputFile.length > 0){\n        const blobsInContainer= await uploadFileToBlob2(fileData1);\n        } \n\n      const blobsInContainer2 = await uploadFileToBlob(fileData2);\n\n      // setBlobList(blobsInContainer);\n      // prepare UI for results\n      //this.state.blobList(blobsInContainer);\n\n\n      // delete notification   \n\n      //fileRename\n      // this.fileNameCall(value)\n\n      this.setState({\n        show: true,\n        inputFile: [],\n        inputFile2: [],\n        successMsg: true,\n        \n        blobList: [blobsInContainer2]\n      })\n      console.log(\"here it is\"+this.state.blobList);\n    }\n  }\n\n\n  handleremoveImage1 = () => {\n    this.setState({\n      inputFile: []\n    })\n  }\n\n    handleremoveImage2 = () => {\n    this.setState({\n      inputFile2: []\n    })\n  }\n\n\nnotify = () => {\ntoast('Kuch Bhi',{position: toast.POSITION.TOP_CENTER})\n}\n  // fileNameCall(){\n  //   let date = new Date();\n  //   let currentTime = moment(date).format('YYYYMMDDHHmmss')\n  //   let filename = `#_${currentTime}.${data['name'].split('.').pop()}`\n  //   formData.append('file', data, filename)\n  // }\n\n\n  render() {\n\n    const { getScrollYPositionValue } = this.props\n    const { listItems } = this.state\n    \n    //debugger;\n    let DisplayMessage = <div className=\"awoinfo-container\">\n      <div className=\"margin-top-small awoinfo-inner-container ln-u-padding-sides*2 ln-u-padding-bottom*4\">\n        <p className=\"text-align-center\">{`Thank you for attending Transaction id :${1234567}. Details are now captured`}</p>\n      </div>\n      \n      <NavLink onClick={this.cancelForm} to=\"/\" activeClassName=\"is-active activeTab\">\n        Open Notifications\n      </NavLink> </div>\n\n    return (\n      <div className=\"auth-wrapper\">\n          <div className=\"auth-inner\">\n      {getScrollYPositionValue && getScrollYPositionValue.show == false ?\n        \n            <div>\n          <Barcode/>\n              {listItems && listItems.length > 0 ?\n                <h3>{`You have ${listItems.length} open transactions to attend`}</h3>\n                : ''}\n              {listItems && listItems.length == 0 ?\n                <div>\n                  <h3>You don't have any transactions to look</h3>\n                  {/* <img src={logo} alt=\"\" className=\"App-logo\" /> */}\n                </div>\n                : ''}\n            </div>\n        \n          : \n            // <div className=\"auth-wrapper\">\n            // <div className=\"auth-inner\">\n            <div>{!this.state.next ? \n                  <div>\n                    <div className=\"form-group\">\n                      <label>Transaction Number</label>\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Transaction Number\" value={getScrollYPositionValue ? getScrollYPositionValue.id : ''} disabled />\n                    </div>\n                    <div className=\"form-group\">\n                      {this.state.inputFile && this.state.inputFile.length == 0 ?\n                        <button className=\"btn btn-primary btn-block\" onClick={this.onFileChange1} onClick={this.focusImageInput1} >Capture <br/> Problem Area</button>\n                      : ''}\n\n                      <input type=\"file\" id=\"step3Image\" style={{ display: 'none' }} onChange={this.handleChangeStep2Image1} accept=\".jpg, .jpeg\" ref={this.faultImageInput} />\n\n                      {this.state.inputFile && this.state.inputFile.length > 0 ?\n                        <div className=\"test-div\"><img key={1} src={this.state.inputFile} width={\"100%;\"} id='imgtag' alt={`Image of fault ${1 + 1}   `} role=\"presentation\" />\n                          <button type=\"button\" className=\"icon-top-left\" aria-label=\"Close\" onClick={this.handleremoveImage1}>\n                            <span aria-hidden=\"true\">&times;</span>\n                          </button>\n                        </div>\n                      : ''}\n                    </div>\n                    \n                    <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={this.notify} onClick={this.handleNext}>Next</button>\n                    <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={this.handleClose}>Cancel</button>\n                  </div>:  <div> {this.state.next ? \n                          // <div className=\"auth-wrapper\">\n                          //   <div className=\"auth-inner\">\n                              <div> <h3>OCR Trigger</h3>\n                                {!this.state.successMsg ?\n                                  <div>\n\n                                    <div className=\"form-group\">  \n                                                                                                          \n                                      <label>Transaction Number</label>\n                                      <input type=\"text\" className=\"form-control\" placeholder=\"Transaction Number\" value={getScrollYPositionValue ? getScrollYPositionValue.id : ''} disabled />\n                                    </div>\n                                    <div className=\"form-group\">\n                                      {this.state.inputFile2 && this.state.inputFile2.length == 0 ?\n                                        <button className=\"btn btn-primary btn-block\" onClick={this.onFileChange2} onClick={this.focusImageInput2} >Capture <br /> Barcode And Supplier Details</button>\n                                      : ''}\n\n                                      <input type=\"file\" id=\"step3Image2\" style={{ display: 'none' }} onChange={this.handleChangeStep2Image2} accept=\".jpg, .jpeg\" ref={this.faultImageInput2} />\n\n                                      {this.state.inputFile2 && this.state.inputFile2.length > 0 ?\n                                        <div className=\"test-div\"><img key={2} src={this.state.inputFile2} width={\"100%;\"} id='imgtag2' alt={`Image of fault ${2 + 1}   `} role=\"presentation\" />\n                                          <button type=\"button\" className=\"icon-top-left\" aria-label=\"Close\" onClick={this.handleremoveImage2}>\n                                            <span aria-hidden=\"true\">&times;</span>\n                                          </button>\n                                        </div>\n                                      : ''}\n                                    </div>\n                                    {/* <BarcodeReader\n                                        onError={this.handleError}\n                                        onScan={this.handleScan}\n                                        />\n                                       <p>{this.state.result}</p> */}\n                                    {/* {this.state.inputFile && this.state.inputFile.length == 0 ? <><div style={{ color: 'red' }}><center>No Reason Yet!!!</center></div> <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={this.handleBack}>Back To Give Reason</button> </>:''} */}\n                                    \n                                    <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={this.handleSubmit}>Submit</button>\n                                    <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={this.handleClose}>Cancel</button>\n                                  </div>\n                                    :               \n                                <div>  \n                                  {this.state.successMsg ? \n                                    <div>\n                                      <img src={logo} alt=\"\" className=\"App-logo\" />\n                                      <div class=\"alert alert-success\" role=\"alert\">\n                                        {`Notification Sent. OCR requested for Transaction id ${getScrollYPositionValue && getScrollYPositionValue.id}`}\n                                      </div>\n                                      <div style={{ textAlign: 'center' }}>\n                                        <Link className=\"navbar-brand\" to={\"/\"} onClick={() => { this.handleCancel() }}>Home</Link>\n                                      </div>\n                                    </div>\n                                  : ''}</div>}\n                                \n                            \n        </div>:''}</div>}\n        </div>\n        // </div></div>\n          \n          \n        \n  }</div></div>\n        \n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    getScrollYPositionValue: state.workOrderReducer && state.workOrderReducer.getScrollYPositionValue,\n    blobList:state.blobList,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getNotification: () => dispatch(getNotification()),\n    storeScrollYPosition: payload => dispatch(storeScrollYPosition(payload)),\n  }\n}\n\n\nHome = connect(mapStateToProps, mapDispatchToProps)(Home)\n\n\nexport default Home","import React from 'react'\r\n\r\nimport { BlobServiceClient, ContainerClient} from '@azure/storage-blob';\r\n\r\n\r\nclass Results extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      blobList: [],\r\n      returnedBlobs:[]\r\n    };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.getBlobsInContainer();\r\n  }\r\n\r\n  getBlobsInContainer = async () => {\r\n\r\n  const sasToken = process.env.storagesastoken || 'sv=2019-12-12&ss=bfqt&srt=sco&sp=rwdlacupx&se=2021-03-31T15:22:13Z&st=2021-01-01T07:22:13Z&spr=https&sig=FVhtgV8zmhwD6I%2BCUDURS3ghXmP8Q%2FY%2FaP%2BXoW0ShrU%3D'; // SAS token\r\n  const containerName = `ocrappinputimage01`;\r\n  const storageAccountName = process.env.storageresourcename || \"ocrfilesharestorageact01\"; //Storage resource name\r\n    \r\n\r\n  const containerName2 = \"ocroutput01\";\r\n  const blobServiceClient2 = new BlobServiceClient(`https://${storageAccountName}.blob.core.windows.net/?${sasToken}`);\r\n  const containerClient2 = blobServiceClient2.getContainerClient(containerName2);\r\n  console.log(\"test\"+containerClient2);\r\n\r\n  async function blobToString(blob) {\r\n    const fileReader = new FileReader();\r\n    return new Promise((resolve, reject) => {\r\n      fileReader.onloadend = (ev) => {\r\n        resolve(ev.target.result);\r\n      };\r\n      fileReader.onerror = reject;\r\n      fileReader.readAsText(blob);\r\n    });\r\n}\r\n \r\n  const returnedBlobs= [];\r\n  console.log(\"A\"+await containerClient2.listBlobsFlat());\r\n  let i = 1;\r\n  for await (const blob of containerClient2.listBlobsFlat()) {\r\n    console.log(`Blob ${i++}: ${blob.name}`);\r\n  \r\n\r\n  const blobClient = containerClient2.getBlobClient(blob.name);  \r\n  const downloadBlockBlobResponse = await blobClient.download();\r\n  const downloaded = await blobToString(await downloadBlockBlobResponse.blobBody);   \r\n    console.log(\"Downloaded blob content\", downloaded);\r\n    \r\n    returnedBlobs.push(JSON.parse(downloaded))\r\n\r\n    \r\n    \r\n  };\r\n\r\n  this.setState({\r\n    blobList: returnedBlobs\r\n  })\r\n  \r\n  // this.setState({\r\n  //   blobList: [returnedBlobs]\r\n  // })\r\n  console.log(\"c\"+this.state.blobList);\r\n\r\n  // return returnedBlobs;\r\n}\r\n\r\n\r\nrender() {\r\nreturn (  \r\n  <div>  \r\n    <div style={{ display: \"flex\" }}>\r\n        <button className=\"btn btn-success\" style={{ marginLeft: \"auto\", marginRight:\"20px\", marginTop:\"20px\" }} onClick={this.getBlobsInContainer}>Refresh</button>\r\n      </div>\r\n      <table className=\"table\" className=\"styled-table\" border=\"\">\r\n          <tbody>\r\n              <tr>\r\n                  <th>Transaction ID</th>\r\n                  <th>Image ID</th>\r\n                  <th>Supplier Code</th>\r\n                  <th>Transaction Date and Time</th>\r\n              </tr>  \r\n              {this.state.blobList && this.state.blobList.map(item => (\r\n                  <tr className=\"active-row\" key={item.transaction_id}>\r\n                      <td>{item.transaction_id}</td>\r\n                      <td>{item.image_id}</td>\r\n                      <td>{item.supplier_code}</td>\r\n                      <td>{item.transaction_date_time}</td>\r\n                  </tr>\r\n              ))}\r\n          </tbody>\r\n      </table>\r\n      \r\n    </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default Results","import React from \"react\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\n\r\nexport default props => {\r\n  return (\r\n    <Menu {...props}>\r\n      <a className=\"menu-item\" href=\"/\">\r\n      Home\r\n      </a>\r\n\r\n      <a className=\"menu-item\" href=\"/Results\">\r\n      Results\r\n      </a>\r\n    </Menu>\r\n  );\r\n};","import React, {useState} from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport {Provider} from 'react-redux'\nimport { createStore, applyMiddleware} from 'redux'\nimport rootReducer from './reducers'\nimport Login from \"./components/login.component\";\nimport Signup from \"./components/signup.component\";\nimport thunkMiddleware from 'redux-thunk'\nimport Home from './components/Home.component'\nimport Results from './components/Results.component';\nimport SideBar from \"./components/sidebar\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  applyMiddleware(thunkMiddleware)\n)\n\nfunction App() {\n  const [state, setState] = useState({ isOpen: false })\n  return (\n  <Provider store = {store}>\n  <Router>    \n    <div className=\"App\">\n    <div><SideBar pageWrapId={\"page-wrap\"} outerContainerId={\"App\"} />  </div>    \n      <div><nav className=\"navbar navbar-expand-lg navbar-light top-bar\">      \n        <div className=\"container\">        \n          <Link className=\"navbar-brand\" to={\"/\"}>OCR Admin Application</Link>\n          {/* <Link to={\"/Results\"}> Results </Link> */}\n        </div>\n           {/* <div className=\"container float\" onClick={() =>\n                  setState({ isOpen: !state.isOpen })\n                }>\n           <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-bell-fill\" viewBox=\"0 0 16 16\">\n            <path d=\"M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2zm.995-14.901a1 1 0 1 0-1.99 0A5.002 5.002 0 0 0 3 6c0 1.098-.5 6-2 7h14c-1.5-1-2-5.902-2-7 0-2.42-1.72-4.44-4.005-4.901z\"/>\n            </svg>\n            <sup>1</sup>\n           </div> */}\n            {/* <Link className=\"navbar-brand\" to={\"/\"}>Result</Link> */}\n           <Login/>\n           \n           \n      </nav></div>\n        \n      \n      \n                                {/* {state.isOpen ? \n                            <div className=\"parent-div\">\n                            <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\n                            Attend the <strong>Transaction Id: 1234567</strong> \n                          <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                          </button>\n                        </div> \n                            </div> : '' } */}\n     {/* <div className=\"auth-wrapper\">\n      <div className=\"auth-inner\"></div> */}\n        <ToastContainer />\n          <Switch>\n            \n            <Route exact path='/' component={Home} />\n            <Route path=\"/ocr_admin\" component={Signup} />\n\n            <Route component={Results}/>\n          </Switch>\n        </div>\n     \n    \n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\nimport AlertTemplate from 'react-alert-template-basic'\n\nconst options = {\n    // you can also just use 'bottom center'\n    position: positions.BOTTOM_CENTER,\n    timeout: 5000,\n    offset: '30px',\n    // you can also just use 'scale'\n    transition: transitions.SCALE\n  }\n\nReactDOM.render(\n    <BrowserRouter>\n    <AlertProvider template={AlertTemplate} {...options}>\n        <App /> \n        </AlertProvider>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}